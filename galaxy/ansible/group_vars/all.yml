use_pbkdf2: true
postgresql_version: 15
galaxy_apt_package_state: present

# The storage backend to use for docker-in-docker.
# overlay2 on parent docker cannot be combined with overlay2 in child docker
docker_storage_backend: overlay2
docker_legacy: false

galaxy_nginx: true
galaxy_postgres: true
galaxy_proftpd: true
galaxy_slurm: true
galaxy_condor: true
galaxy_pbs: false
galaxy_k8s_jobs: false
galaxy_supervisor: true
galaxy_job_metrics: true
galaxy_file_source_templates: true
galaxy_object_store_templates: true
galaxy_vault_config: true
galaxy_scripts: true
galaxy_domain: "localhost"  # This is used by letsencrypt and Interactive Tools, set it to the domain name under which galaxy can be reached
galaxy_startup: true
galaxy_rabbitmq: true
galaxy_redis: true
galaxy_flower: true
galaxy_tusd: true
galaxy_cvmfs_client: false
galaxy_job_conf: true
galaxy_gravity: true
galaxy_docker: true

galaxy_db_port: "5432"
galaxy_database_connection: "postgres://{{ galaxy_user_name }}@localhost:{{ galaxy_db_port }}/galaxy"

# Default destination for Galaxy jobs in generated job_conf.xml - can
# tweak this to allow for a different default for Docker-enabled tools.
galaxy_destination_default: slurm_cluster
galaxy_destination_docker_default: "{{ galaxy_destination_default }}"
galaxy_destination_singularity_default: "{{ galaxy_destination_default }}"

# set the FQDN for the pbs server, only used when galaxy_pbs: true
pbs_server_name: pbsqueue

# Only used when galaxy_slurm: true, sets slurm ntask in job_conf.xml.
# Will be overwritten if NATIVE_SPEC environmental variable is set.
# In the default setting controls the value of GALAXY_SLOTS.
# Use ansible_processor_cores: "{{ ansible_processor_vcpus  }}" to set this to the number of
# threads per core * processor count * cores per processor
galaxy_slurm_ntask: 1

galaxy_gcc_available: false

# Follow job_conf attributes set if galaxy_k8s_jobs is true.
galaxy_k8s_jobs_use_service_account: true
galaxy_k8s_jobs_persistent_volume_claims: galaxy-web-claim0:/export
galaxy_k8s_jobs_namespace: default
galaxy_k8s_jobs_supplemental_group_id: 0
galaxy_k8s_jobs_fs_group_id: 0
galaxy_k8s_jobs_pull_policy: IfNotPresent

# Point at the existing Galaxy configuration.
galaxy_server_dir: "/galaxy"
galaxy_config_dir: "{{ galaxy_server_dir }}/config"
galaxy_job_conf_path: "{{ galaxy_config_dir }}/job_conf.xml"
galaxy_container_resolvers_conf_path: "{{ galaxy_config_dir }}/container_resolvers_conf.yml"
galaxy_job_metrics_conf_path: "{{ galaxy_config_dir }}/job_metrics_conf.yml"
galaxy_file_source_templates_config_file: "{{ galaxy_config_dir }}/file_source_templates.yml"
galaxy_object_store_templates_config_file: "{{ galaxy_config_dir }}/object_store_templates.yml"
galaxy_vault_config_file: "{{ galaxy_config_dir }}/vault_conf.yml"
galaxy_user_name: "galaxy"
galaxy_home_dir: "/home/{{ galaxy_user_name }}"
galaxy_source_shellrc: false
galaxy_user_shellrc: "{{ galaxy_home_dir }}/.bashrc"
galaxy_logs_dir: "{{ galaxy_home_dir }}/"
galaxy_venv_dir: "{{ galaxy_home_dir }}/venv"

galaxy_config_file: "{{ galaxy_config_dir }}/galaxy.yml"
galaxy_toolshed_config_file: "{{ galaxy_config_dir }}/tool_shed.yml"
galaxy_tool_data_table_config_file: "{{ galaxy_config_dir }}/tool_data_table_conf.xml"

galaxy_toolshed_port: "9009"

# Docker defaults
galaxy_docker_enabled: false
galaxy_docker_sudo: false
galaxy_docker_default_image: 'busybox:ubuntu-14.04'
galaxy_docker_volumes_from: ""
galaxy_docker_volumes : "$defaults"
galaxy_docker_net: "bridge"
galaxy_docker_auto_rm: true
galaxy_docker_set_user: ""

# Singularity defaults
galaxy_singularity_enabled: false
galaxy_singularity_sudo: false
# ToDo create default image
galaxy_singularity_default_image: ''
galaxy_singularity_volumes_from: ""
# rw directories are not considered if the parent is ro
galaxy_singularity_volumes : "$defaults"

galaxy_container_resolution: false
container_resolution_explicit: true
container_resolution_mulled: true
container_resolution_cached_mulled: "{{ container_resolution_mulled }}"
container_resolution_build_mulled: "{{ container_resolution_mulled }}"
container_resolution_mulled_namespace: biocontainers

# Gravity configuration.
gravity_config_file: "{{ galaxy_config_dir }}/gravity.yml"
gravity_state_dir: "{{ galaxy_server_dir }}/database/gravity"
gravity_process_manager: "supervisor"
gravity_manage_reports: true
gravity_manage_celery: true
gravity_manage_tusd: true
gravity_manage_gx_it_proxy: true

# Gunicorn configuration.
galaxy_gunicorn: true
gunicorn_port: "4001"
gunicorn_workers: 2

# Handler configuration.
galaxy_dynamic_handlers: true
galaxy_handler_processes: 2

# Celery configuration.
galaxy_celery: true
galaxy_celery_beat: true
celery_workers: 2

# gx_it_proxy configuration.
galaxy_gx_it_proxy: true
gx_it_proxy_port: "4002"
gx_it_proxy_version: '>=0.0.6'
gx_it_proxy_sessions_path: "{{ galaxy_server_dir }}/database/interactivetools_map.sqlite"

# Tusd configuration.
tusd_port: "1080"
tusd_path: "/usr/local/sbin/tusd"
tus_upload_store_path: "/tmp/tus_upload_store"
tusd_base_path: "{{ nginx_tusd_location }}"

# Galaxy reports configuration.
galaxy_reports: true
galaxy_reports_config_file: "{{ galaxy_config_dir }}/reports.yml"
galaxy_reports_port: "9001"
galaxy_reports_url_prefix: "{{ nginx_reports_location }}"

galaxy_job_metrics_core: true
galaxy_job_metrics_env: false
galaxy_job_metrics_cpuinfo: true
galaxy_job_metrics_meminfo: true
galaxy_job_metrics_uname: true
galaxy_job_metrics_hostname: false
galaxy_job_metrics_cgroup: false
# TODO: configure collectl, individual env files
# TODO: alternative to configure metrics all at once using yml datastructure.

galaxy_it_fetch_jupyter: false
galaxy_it_jupyter_image: quay.io/bgruening/docker-jupyter-notebook:2021-03-05
galaxy_it_fetch_rstudio: false
galaxy_it_rstudio_image: quay.io/galaxy/docker-rstudio-notebook:23.1
galaxy_it_fetch_ethercalc: false
galaxy_it_ethercalc_image: shiltemann/ethercalc-galaxy-ie:17.05
galaxy_it_fetch_phinch: false
galaxy_it_phinch_image: shiltemann/docker-phinch-galaxy:16.04
galaxy_it_fetch_neo: false
galaxy_it_neo_image: quay.io/sanbi-sa/neo_ie:3.1.9

# Nginx configuration.
nginx_conf_dir: /etc/nginx
nginx_conf_file: "{{ nginx_conf_dir }}/nginx.conf"

# Use nginx_*_location variables to control serving apps at subdirectories.
# If galaxy should be served at subdirectory (e.g. example.com/galaxy) set nginx_galaxy_location: /galaxy
# If all apps should be served on a common subdirectory, use nginx_prefix_location: /your_common_dir
nginx_prefix_location: ""
nginx_galaxy_location: "{{ nginx_prefix_location }}"
nginx_reports_location: "{{ nginx_prefix_location }}/reports"
nginx_rabbitmq_management_location: "{{ nginx_prefix_location }}/rabbitmq"
nginx_flower_location: "{{ nginx_prefix_location }}/flower"
nginx_tusd_location: "{{ nginx_prefix_location }}/api/upload/resumable_upload"
nginx_planemo_web_location: "{{ nginx_prefix_location }}/planemo"
nginx_ide_location: "{{ nginx_prefix_location }}/ide"
nginx_welcome_location: "{{ nginx_prefix_location }}/etc/galaxy/web"
nginx_welcome_path: "/etc/galaxy/web"

# Synchronize error handling with ansible-galaxy role.
galaxy_errordocs_dir: "/var/www/galaxy_errordocs"

#web security
nginx_use_passwords: false
nginx_htpasswds:
  - "admin:WiBKbsJTSQ8dc"
nginx_use_remote_header: true

# Additional configurations to be appended to nginx config
nginx_additional_config : []

nginx_proxy_gunicorn: true
nginx_proxy_reports: true
nginx_proxy_rabbitmq_management: true
nginx_proxy_flower: true
nginx_proxy_interactive_tools: true

# Certbot Configuration.
certbot_auto_renew_hour: "{{ 23 |random(seed=inventory_hostname)  }}"
certbot_auto_renew_minute: "{{ 59 |random(seed=inventory_hostname)  }}"
certbot_auth_method: --webroot
certbot_install_method: virtualenv
certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_environment: production
certbot_well_known_root: "{{ nginx_conf_dir }}/_well-known_root"
certbot_share_key_users:
  - "{{ galaxy_user_name }}"
certbot_post_renewal: |
    supervisorctl restart nginx || true
certbot_agree_tos: --agree-tos

## Proftp Configuration.
proftpd_conf_path:  /etc/proftpd/proftpd.conf
proftpd_sql_db: galaxy@galaxy
proftpd_sql_user: galaxy
proftpd_sql_password: galaxy
proftpd_welcome: "Public Galaxy FTP"
galaxy_ftp_upload_dir: /export/ftp
proftpd_ftp_port: 21
proftpd_passive_port_low: 30000
proftpd_passive_port_high: 40000
proftpd_sftp_port: 22
# Set masquearade to true if host is NAT'ed.
proftpd_nat_masquerade: false
# proftpd_masquerade_address refers to the ip that clients use to establish an ftp connection.
# Can be a command that returns an IP or an IP address and applies only if proftpd_nat_masquerade is true.
# ec2metadata --public-ipv4 returns the public ip for amazon's ec2 service.
proftpd_masquerade_address: "`ec2metadata --public-ipv4`"

## RabbitMQ Configuration.
rabbitmq_port: "5672"
rabbitmq_management_port: "15672"
rabbitmq_admin_username: admin
rabbitmq_admin_password: admin
rabbitmq_galaxy_vhost: galaxy
rabbitmq_galaxy_username: galaxy
rabbitmq_galaxy_password: galaxy
rabbitmq_flower_username: flower
rabbitmq_flower_password: flower
galaxy_amqp_internal_connection: "pyamqp://{{ rabbitmq_galaxy_username }}:{{ rabbitmq_galaxy_password }}@localhost:{{ rabbitmq_port }}/{{ rabbitmq_galaxy_vhost }}"

## Flower Configuration.
flower_conf_path: /etc/flower/flowerconfig.py
flower_bind_address: 0.0.0.0
flower_port: "5555"
flower_broker_api: "http://{{ rabbitmq_flower_username }}:{{ rabbitmq_flower_password }}@localhost:{{ rabbitmq_management_port }}/api/"  # URL of broker (RabbitMQ Management) API
flower_broker_url: "amqp://{{ rabbitmq_flower_username }}:{{ rabbitmq_flower_password }}@localhost:{{ rabbitmq_port }}/{{ rabbitmq_galaxy_vhost }}"  # AMQP URL for Flower to connect to broker (RabbitMQ)
flower_persistent: true
flower_db_file: "{{ galaxy_server_dir }}/database/flower.db"
flower_app_name: galaxy.celery
flower_log: "{{ galaxy_logs_dir }}/flower.log"
flower_url_prefix: "{{ nginx_flower_location }}"
flower_venv_dir: "{{ galaxy_venv_dir }}"
flower_user: "{{ galaxy_user_name }}"
flower_group: "{{ galaxy_user_name }}"
flower_venv_user: "{{ galaxy_user_name }}"
flower_venv_group: "{{ galaxy_user_name }}"

## Supervisor Configuration.
supervisor_conf_path: "/etc/supervisor/conf.d/galaxy.conf"
supervisor_webserver: true
supervisor_webserver_port: "0.0.0.0:9002"
supervisor_webserver_username: null
supervisor_webserver_password: changeme

supervisor_manage_cron: true
supervisor_manage_autofs: true
supervisor_manage_slurm: false
supervisor_manage_condor: true
supervisor_manage_postgres: true
supervisor_manage_proftp: true
supervisor_manage_nginx: true
supervisor_manage_toolshed: false
supervisor_manage_docker: true
supervisor_manage_rabbitmq: true
supervisor_manage_redis: true
supervisor_manage_flower: true

supervisor_cron_autostart: false
supervisor_autofs_autostart: true
supervisor_slurm_autostart: true
supervisor_condor_autostart: false
supervisor_postgres_autostart: false
supervisor_proftpd_autostart: false
supervisor_docker_autostart: false
supervisor_docker_autorestart: true
supervisor_rabbitmq_autostart: false
supervisor_redis_autostart: false
supervisor_flower_autostart: false

supervisor_slurm_config_dir: "/home/galaxy"
supervisor_postgres_config_path: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
supervisor_postgres_database_path: "/export/postgresql/{{ postgresql_version }}/main"
supervisor_postgres_options: "-D {{ supervisor_postgres_database_path }} -c \"config_file={{ supervisor_postgres_config_path }}\""

supervisor_galaxy_startsecs: 20
# had to increase retries to ensure the postgres database is available,
# wasn't needed in the past.
supervisor_galaxy_startretries: 15

## CVMFS Configuration.
cvmfs_config_repo:
  domain: galaxyproject.org
  key:
    path: /etc/cvmfs/keys/galaxyproject.org/cvmfs-config.galaxyproject.org.pub
    key: |
      -----BEGIN PUBLIC KEY-----
      MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuJZTWTY3/dBfspFKifv8
      TWuuT2Zzoo1cAskKpKu5gsUAyDFbZfYBEy91qbLPC3TuUm2zdPNsjCQbbq1Liufk
      uNPZJ8Ubn5PR6kndwrdD13NVHZpXVml1+ooTSF5CL3x/KUkYiyRz94sAr9trVoSx
      THW2buV7ADUYivX7ofCvBu5T6YngbPZNIxDB4mh7cEal/UDtxV683A/5RL4wIYvt
      S5SVemmu6Yb8GkGwLGmMVLYXutuaHdMFyKzWm+qFlG5JRz4okUWERvtJ2QAJPOzL
      mAG1ceyBFowj/r3iJTa+Jcif2uAmZxg+cHkZG5KzATykF82UH1ojUzREMMDcPJi2
      dQIDAQAB
      -----END PUBLIC KEY-----
  urls:
    - http://cvmfs1-psu0.galaxyproject.org/cvmfs/@fqrn@
    - http://cvmfs1-iu0.galaxyproject.org/cvmfs/@fqrn@
    - http://cvmfs1-tacc0.galaxyproject.org/cvmfs/@fqrn@
    - http://cvmfs1-ufr0.galaxyproject.eu/cvmfs/@fqrn@
    - http://cvmfs1-mel0.gvl.org.au/cvmfs/@fqrn@
  repository:
    repository: cvmfs-config.galaxyproject.org
    stratum0: cvmfs0-psu0.galaxyproject.org
    owner: "root"
    server_options: []
    client_options: []

cvmfs_keys:
  - path: /etc/cvmfs/keys/galaxyproject.org/cvmfs-config.galaxyproject.org.pub
    key: |
      -----BEGIN PUBLIC KEY-----
      MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuJZTWTY3/dBfspFKifv8
      TWuuT2Zzoo1cAskKpKu5gsUAyDFbZfYBEy91qbLPC3TuUm2zdPNsjCQbbq1Liufk
      uNPZJ8Ubn5PR6kndwrdD13NVHZpXVml1+ooTSF5CL3x/KUkYiyRz94sAr9trVoSx
      THW2buV7ADUYivX7ofCvBu5T6YngbPZNIxDB4mh7cEal/UDtxV683A/5RL4wIYvt
      S5SVemmu6Yb8GkGwLGmMVLYXutuaHdMFyKzWm+qFlG5JRz4okUWERvtJ2QAJPOzL
      mAG1ceyBFowj/r3iJTa+Jcif2uAmZxg+cHkZG5KzATykF82UH1ojUzREMMDcPJi2
      dQIDAQAB
      -----END PUBLIC KEY-----
